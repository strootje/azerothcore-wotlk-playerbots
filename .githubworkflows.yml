name: docker-build
on:
  push:
    branches:
      - 'main'

concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true

env:
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1
  RUNNING_ON_PRIMARY_BRANCH: false

jobs:
  build-containers:
    runs-on: "ubuntu-latest"
    steps:
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Download AzerothCore
        uses: actions/checkout@v4
        with:
          repository: liyunfan1223/azerothcore-wotlk
          
      - name: Download PlayerBots
        uses: actions/checkout@v4
        with:
          repository: liyunfan1223/mod-playerbots
          path: modules/mod-playerbots
          
      - name: Download Eluna
        uses: actions/checkout@v4
        with:
          repository: azerothcore/mod-eluna
          path: modules/mod-eluna

      # - name: Login to Docker Hub
      #   if: github.repository == 'azerothcore/azerothcore-wotlk' && github.ref_name == 'master'
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version
        id: version
        run: |
          version="$(jq -r '.version' acore.json)"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: build worldserver
        uses: ./.github/actions/docker-tag-and-build
        with:
          component-name: worldserver
          version: ${{ steps.version.outputs.version }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}

      - name: build authserver
        uses: ./.github/actions/docker-tag-and-build
        with:
          component-name: authserver
          version: ${{ steps.version.outputs.version }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}

      - name: build db-import
        uses: ./.github/actions/docker-tag-and-build
        with:
          component-name: db-import
          version: ${{ steps.version.outputs.version }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}

      - name: build client-data
        uses: ./.github/actions/docker-tag-and-build
        with:
          component-name: client-data
          version: ${{ steps.version.outputs.version }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}

      - name: build tools
        uses: ./.github/actions/docker-tag-and-build
        with:
          component-name: tools
          version: ${{ steps.version.outputs.version }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}
