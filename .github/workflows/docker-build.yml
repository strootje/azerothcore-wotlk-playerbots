on: { workflow_dispatch: {} }

concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true

env:
  VERSION: 0.1.0
  REGISTRY: ghcr.io
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1
  RUNNING_ON_PRIMARY_BRANCH: true

jobs:
  build-containers:
    runs-on: "ubuntu-latest"

    permissions:
      contents: read
      packages: write

    steps:
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: actions/checkout@v4

      - name: Download AzerothCore
        uses: actions/checkout@v4
        with: { repository: liyunfan1223/azerothcore-wotlk }

      - name: Download PlayerBots
        uses: actions/checkout@v4
        with:
          repository: liyunfan1223/mod-playerbots
          path: src/modules/mod-playerbots

      - name: Download Eluna
        uses: actions/checkout@v4
        with:
          repository: azerothcore/mod-eluna
          path: src/modules/mod-eluna

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # {{{
      - uses: docker/metadata-action@v5
        with: { images: "${{ env.REGISTRY }}/strootje/acore/ac-wotlk-worldserver" }
        id: meta-worldserver

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          target: worldserver
          file: apps/docker/Dockerfile
          context: ${{ github.workspace }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}
          tags: ${{ steps.meta-worldserver.outputs.tags }}
          # platforms: linux/amd64,linux/arm64
          build-args: |
            USER_ID=1000
            GROUP_ID=1000
            DOCKER_USER=acore
      # }}}
      # {{{
      - uses: docker/metadata-action@v5
        with: { images: "${{ env.REGISTRY }}/strootje/acore/ac-wotlk-authserver" }
        id: meta-authserver

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          target: authserver
          file: apps/docker/Dockerfile
          context: ${{ github.workspace }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}
          tags: ${{ steps.meta-authserver.outputs.tags }}
          # platforms: linux/amd64,linux/arm64
          build-args: |
            USER_ID=1000
            GROUP_ID=1000
            DOCKER_USER=acore
      # }}}
      # {{{
      - uses: docker/metadata-action@v5
        with: { images: "${{ env.REGISTRY }}/strootje/acore/ac-wotlk-db-import" }
        id: meta-db-import

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          target: db-import
          file: apps/docker/Dockerfile
          context: ${{ github.workspace }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}
          tags: ${{ steps.meta-db-import.outputs.tags }}
          # platforms: linux/amd64,linux/arm64
          build-args: |
            USER_ID=1000
            GROUP_ID=1000
            DOCKER_USER=acore
      # }}}
      # {{{
      - uses: docker/metadata-action@v5
        with: { images: "${{ env.REGISTRY }}/strootje/acore/ac-wotlk-client-data" }
        id: meta-client-data

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          target: client-data
          file: apps/docker/Dockerfile
          context: ${{ github.workspace }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}
          tags: ${{ steps.meta-client-data.outputs.tags }}
          # platforms: linux/amd64,linux/arm64
          build-args: |
            USER_ID=1000
            GROUP_ID=1000
            DOCKER_USER=acore
      # }}}
      # {{{
      - uses: docker/metadata-action@v5
        with: { images: "${{ env.REGISTRY }}/strootje/acore/ac-wotlk-tools" }
        id: meta-tools

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          target: tools
          file: apps/docker/Dockerfile
          context: ${{ github.workspace }}
          push: ${{ env.RUNNING_ON_PRIMARY_BRANCH }}
          tags: ${{ steps.meta-tools.outputs.tags }}
          # platforms: linux/amd64,linux/arm64
          build-args: |
            USER_ID=1000
            GROUP_ID=1000
            DOCKER_USER=acore
      # }}}
